name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build Maven Project
        run: mvn clean install

      - name: Run JUnit Tests
        run: mvn test

  build-container:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up Podman
        run: |
          # Install Podman
          sudo dnf -y install podman
          podman login -u ${{ secrets.RH_REGISTRY_USERNAME }} -p ${{ secrets.RH_REGISTRY_PASSWORD }} registry.redhat.io
          # Run your Podman commands here
          # For example, to build your Podman image:
          podman build -t java-app .


  scan-security-vulnerabilities:
   runs-on: ubuntu-latest
   needs: build-container

   steps:
     - name: Checkout Repository
       uses: actions/checkout@v2

     - name: Scan Docker image üê≥
       uses: snyk/actions/docker@master
       continue-on-error: true
       with:
         image: java-app
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and Deploy
        run: |
          #login to redhat
          podman login -u ${{ secrets.RH_REGISTRY_USERNAME }} -p ${{ secrets.RH_REGISTRY_PASSWORD }} registry.redhat.io
          # Build the podman image with the multi-stage Dockerfile
          podman build -t java-app .

          # Set up OpenShift CLI
          oc login --token=$YOUR_OPENSHIFT_TOKEN --server=$YOUR_OPENSHIFT_SERVER

          # Deploy the Podman image directly to OpenShift
          oc new-build --name=java-app --image-stream=ubi8/ubi --binary
          oc start-build java-app --from-dir=. --follow
          oc new-app java-app

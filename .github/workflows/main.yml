name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build Maven Project
        run: mvn clean install

      - name: Run JUnit Tests
        run: mvn test

  build-container:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get -y install docker.io

      - name: Prepare Dockerfile
        run: |
          # Ensure the Dockerfile is in the correct location
          cd Java-maven-project

      - name: Build Docker Image
        run: |
          # Build your Docker image from the current directory
          docker build -t java-app .

  scan-security-vulnerabilities:
    runs-on: ubuntu-latest
    needs: build-container

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Scan Docker image üê≥
        uses: snyk/actions/docker@master
        continue-on-error: true
        with:
          image: java-app

  deploy:
    runs-on: ubuntu-latest
    needs: [scan-security-vulnerabilities]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and Deploy
        run: |
          # Log in to Red Hat registry using Docker (you might need to adjust this for your specific registry)
          docker login -u ${{ secrets.RH_REGISTRY_USERNAME }} -p ${{ secrets.RH_REGISTRY_PASSWORD }} registry.redhat.io
          
          # Build the Docker image with the multi-stage Dockerfile (already prepared)
          docker build -t java-app .
          
          # Set up OpenShift CLI (oc)
          # You might need to install oc or set up your environment accordingly
          # Set OC_CLI environment variable to the path of the oc executable
          
          # Deploy the Docker image directly to OpenShift
          $OC_CLI login --token=$YOUR_OPENSHIFT_TOKEN --server=$YOUR_OPENSHIFT_SERVER
          $OC_CLI new-build --name=java-app --image-stream=ubi8/ubi --binary
          $OC_CLI start-build java-app --from-dir=. --follow
          $OC_CLI new-app java-app

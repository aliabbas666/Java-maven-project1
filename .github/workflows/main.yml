name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build Maven Project
        run: mvn clean install

      - name: Run JUnit Tests
        run: mvn test

  build-docker-image:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image
        run: docker build -t java-app .

  scan-security-vulnerabilities:
    runs-on: ubuntu-latest
    needs: build-docker-image

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Scan Security Vulnerabilities
        id: scan
        run: |
          SCAN_RESULT=$(docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy --format json -o /tmp/trivy_report.json ${{ secrets.DOCKER_IMAGE_NAME }})
          echo "$SCAN_RESULT"

      - name: Check for HIGH or CRITICAL Vulnerabilities
        run: |
          CRITICAL_HIGH_COUNT=$(jq '.[].Vulnerabilities | map(select(.Severity | contains("CRITICAL") or contains("HIGH"))) | length' /tmp/trivy_report.json)
          if [ "$CRITICAL_HIGH_COUNT" -gt 0 ]; then
            echo "Found HIGH or CRITICAL vulnerabilities."
            exit 1
          else
            echo "No HIGH or CRITICAL vulnerabilities found."
          fi

name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
   
    steps:
      - name: Check Ubuntu Virtual Environment Provided by GitHub Action
        run: |
          lsb_release -a
          ip addr
          free -m
          lscpu
          df -h
          pwd
          date
          apt-get -y update 
          apt-get install -y sudo
          sudo apt-get install -y unzip
          sudo apt-get install -y wget
          sudo apt-get -y update 
          
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"

      - name: Download SonarScanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner-cli-4.6.2.2472-linux.zip
          sudo mv sonar-scanner-4.6.2.2472-linux /opt/sonar-scanner

      - name: Build Maven Project
        run: mvn clean install

      - name: Run JUnit Tests
        run: mvn test

  build-container:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up docker
        uses: docker/setup-buildx-action@v1

      - name: Login to Red Hat Registry
        run: |
          echo "Red Hat Registry Username: ${{ secrets.RH_REGISTRY_USERNAME }}"
          echo "Red Hat Registry Password: ${{ secrets.RH_REGISTRY_PASSWORD }}"
          docker login -u tinlam -p d545743D@007 registry.redhat.io
          docker login -u ${{ secrets.RH_REGISTRY_USERNAME }} -p ${{ secrets.RH_REGISTRY_PASSWORD }} quay.io

      - name: Build docker Image
        run: docker build -t quay.io/tinlam/test/java-app:latest .

      - name: Push Docker Image
        run: docker push quay.io/tinlam/test/java-app:latest

  scan-security-vulnerabilities:
    runs-on: ubuntu-latest
    needs: build-container

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Echo masked SNYK_TOKEN
        run: echo "***${{ secrets.SNYK_TOKEN }}***"
        
      - name: Scan docker image üê≥
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: quay.io/tinlam/test/java-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [scan-security-vulnerabilities]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install OpenShift CLI (oc)
        run: |
          curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
          tar -xvf oc.tar.gz
          chmod +x oc
          sudo mv oc /usr/local/bin/
          oc version

      - name: Set up OpenShift CLI
        run: |
          oc login --token=sha256~tLoCrtiLrPUKxQoe3DgLhfgPqBXKSySR1ILKvUB-2qA --server=https://api.sandbox-m2.ll9k.p1.openshiftapps.com:6443

      - name: Apply OpenShift Manifests
        run: |
          oc apply -f deployment.yaml
          oc apply -f service.yaml
          oc apply -f route.yaml
